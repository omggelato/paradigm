; OM File Header - Saved 2023/10/27 23:11:17
; (6.16 :patc (om-make-point 10 10) (om-make-point 50 50) (om-make-point 500 420) "" 183 0 "2022/10/08 15:24:06" "2023/10/27 23:11:17")
; End File Header
(in-package :om)(load-lib-for (quote ("myextension")))(setf *om-current-persistent* (om-load-patch1 "is a step or a repeat" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 392 276) (om-make-point 26 28) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 358 276) (om-make-point 31 28) -2 "-2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "?BETWEEN" (quote ?between) (quote ((om-load-inputfun (quote input-funbox) "" "X" nil) (om-load-inputfun (quote input-funbox) "" "MIN" nil) (om-load-inputfun (quote input-funbox) "" "MAX" nil))) (om-make-point 334 306) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "?-" (quote ?-) (quote ((om-load-inputfun (quote input-funbox) "" "X" nil) (om-load-inputfun (quote input-funbox) "" "XS" nil))) (om-make-point 324 234) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 83 511) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "x2" 1 (om-make-point 39 143) "" "x2" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "x1" 0 (om-make-point 87 143) "" "x1" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 2 0 nil 0) (1 0 2 1 nil 0) (0 0 2 2 nil 0) (5 0 3 0 nil 0) (6 0 3 1 nil 0) (2 0 4 0 nil 0))) nil 6.16))