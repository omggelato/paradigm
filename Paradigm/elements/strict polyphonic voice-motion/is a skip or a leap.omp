; OM File Header - Saved 2023/10/26 21:14:22
; (6.16 :patc (om-make-point 10 10) (om-make-point 50 50) (om-make-point 500 302) "" 908 0 "2023/10/26 21:05:19" "2023/10/26 21:14:18")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"is a skip.omp\"" "#P\"is a leap.omp\""))
(in-package :om)(load-lib-for (quote ("myextension")))(setf *om-current-persistent* (om-load-patch1 "is a skip or a leap" (quote ((let ((box (om-load-boxcall (quote patch-box) "is a skip" (quote ("elements" "paradigms" "myparadigm 3" "is a skip")) (quote ((om-load-inputfun (quote input-funbox) "" "x1" nil) (om-load-inputfun (quote input-funbox) "" "x2" nil))) (om-make-point 22 97) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "is a leap" (quote ("elements" "paradigms" "myparadigm 3" "is a leap")) (quote ((om-load-inputfun (quote input-funbox) "" "x1" nil) (om-load-inputfun (quote input-funbox) "" "x2" nil))) (om-make-point 69 97) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "?OR" (quote ?or) (quote ((om-load-inputfun (quote input-funbox) "" "XS" nil) (om-load-inputfun (quote input-funbox) "" "XS" nil))) (om-make-point 52 171) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 0 231) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "x2" 1 (om-make-point 95 25) "" "x2" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "x1" 0 (om-make-point 18 35) "" "x1" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 0 0 nil 0) (4 0 0 1 nil 0) (5 0 1 0 nil 0) (4 0 1 1 nil 0) (0 0 2 0 nil 0) (1 0 2 1 nil 0) (2 0 3 0 nil 0))) nil 6.16))
