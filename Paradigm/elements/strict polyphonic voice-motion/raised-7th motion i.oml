; OM File Header - Saved 2023/10/27 23:11:18
; (6.16 :lisp (om-make-point 118 360) (om-make-point 50 50) (om-make-point 500 400) "Defines motion types involving the raised 7th" 908 0 "2023/10/26 17:06:46" "2023/10/27 23:11:18")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-lisp-patch "raised-7th motion i" 6.16 ";;; Edit a valid LAMBDA EXPRESSION for \"raised-7th motion i\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (sequence tonic-pc)$  (let ((leading-tone (?% (?- tonic-pc 1) 12)))$    (labels$        ((is-a-leap (x1 x2) (?> (?abs (?- x2 x1)) 2))$         (is-a-step (x1 x2) (?and (?/= x1 x2) (?<= (?abs (?- x2 x1)) 2)))$         (repeats (x1 x2) (?= x1 x2))$         (upwards (x1 x2) (?< x1 x2))$         (downwards (x1 x2) (?> x1 x2))$         $         (process-sequence-voice (xs)$           (let ((voice (flat xs)))$             (cond$              ((= 1 (length voice)) T)$              ((= 2 (length voice)) T)$              (T             $               (map?and #'next3 (nsucc voice 3 :step 1))))))$         (next3 (xs)           $           (cond$            ((t2l::has-null-values xs) T) ; fix            $            (T$             (let ((cadr-is-LT (?= (?% (cadr xs) 12) leading-tone)))$               (?or$  $                ; middle note of the group raised 7th$                (?and$                 cadr-is-LT$                 (?or$                  $                  ; chromatic motion toward tonic through leading tone $                  (?and$                   (?= (car xs) (?- (cadr xs) 1))$                   (?= (caddr xs) (?+ 1 (cadr xs))))$$                  ; leap to leading tone passes to tonic$                  (?and$                   (is-a-leap (car xs) (cadr xs))$                   (?= (caddr xs) (?+ 1 (cadr xs))))$$                  ; repeated leading-tone passes upward$                  (?and (?= (car xs) (cadr xs))$                        (?= (caddr xs) (?+ 1 (cadr xs))))$                  ))$                (?not cadr-is-LT)))))))$      (map?and #'process-sequence-voice sequence))))$                   "))